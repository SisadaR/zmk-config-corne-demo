/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&trans>;
            key-positions = <2 3>;
        };

        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <26 27>;
        };

        cmd {
            bindings = <&kp LCMD>;
            key-positions = <37 38>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <39 40>;
        };

        shift {
            bindings = <&kp LSHIFT>;
            key-positions = <8 9>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <32 33>;
        };
    };

    macros {
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            label = "ZM_zed_em_kay";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z &kp M &kp K>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
 &kp ESC        &kp Q       &kp W       &kp E         &kp R      &kp T            &kp Y         &kp U       &kp I       &kp O                &kp P      &kp BSLH
   &mo 3  &mt LCTRL A  &mt LALT S  &mt LGUI D  &mt LSHIFT F      &kp G            &kp H  &mt RSHIFT J  &mt RGUI K  &mt RALT L  &mt RCTRL SEMICOLON      &kp APOS
   &mo 4        &kp Z       &kp X       &kp C         &kp V      &kp B            &kp N         &kp M   &kp COMMA     &kp DOT             &kp FSLH  &kp LEFT_ALT
                                     &kp LGUI         &mo 1  &kp SPACE          &kp RET         &mo 2   &kp LCTRL
            >;
        };

        raise {
            bindings = <
 &kp GRAVE         &kp N1  &kp N2        &kp N3          &kp N4          &kp N5                   &kp N6     &kp N7     &kp N8            &kp N9             &kp N0  &kp DELETE
    &trans       &kp LBKT  &trans      &kp PLUS    &kp KP_MINUS        &kp LPAR                 &kp RPAR  &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp PIPE
    &trans  &kp LESS_THAN  &trans  &kp KP_EQUAL  &kp UNDERSCORE  &kp LEFT_BRACE          &kp RIGHT_BRACE     &trans     &trans            &trans   &kp GREATER_THAN      &trans
                                         &trans          &trans          &trans                   &trans     &trans     &trans
            >;
        };

        lower {
            bindings = <
 &kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT               &kp CARET        &kp AMPS  &kp KP_MULTIPLY         &kp LPAR  &kp RPAR    &kp DEL
    &trans    &trans  &trans    &trans    &trans     &trans          &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW  &kp RIGHT_ARROW  &kp BSLH  &kp GRAVE
    &trans    &trans  &trans    &trans    &trans     &trans                  &trans          &trans           &trans           &trans  &kp PIPE  &kp TILDE
                                &trans    &trans     &trans                  &trans          &trans           &trans
            >;
        };

        numpad {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1   &trans          &trans        &kp KP_N7   &kp KP_N8  &kp KP_N9  &trans  &trans
     &trans        &trans        &trans        &trans        &trans   &trans          &trans        &kp KP_N4   &kp KP_N5  &kp KP_N6  &trans  &trans
     &trans        &trans        &trans        &trans        &trans   &trans          &trans        &kp KP_N1   &kp KP_N2  &kp KP_N3  &trans  &trans
                                               &trans        &trans  &kp TAB          &trans  &kp KP_NUMBER_0  &kp KP_DOT
            >;
        };

        Direction {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                &kp HOME   &kp PAGE_DOWN   &kp PAGE_UP          &kp END  &kp INSERT  &kp DELETE
 &trans  &trans  &trans  &trans  &trans  &trans          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW      &trans      &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans          &trans        &trans           &trans      &trans      &trans
                         &trans  &trans  &trans                  &trans          &trans        &trans
            >;
        };
    };
};
